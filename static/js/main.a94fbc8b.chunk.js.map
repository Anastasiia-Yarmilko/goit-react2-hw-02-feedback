{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","App.jsx","index.js"],"names":["Section","title","children","className","PropsType","string","Statistics","countTotalFeedbacks","props","state","good","neutral","bad","countPositiveFeedbackPercent","Math","round","totalFeedbacks","this","Component","FeedbackOptions","options","onLeaveFeedback","map","key","type","name","onClick","arrayOf","func","App","handleFeedback","event","currentTarget","setState","prevState","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAEO,SAASA,EAAT,GAAkD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UACzC,OACE,gCACE,6BAAKF,IACL,yBAASE,UAAWA,EAApB,SAAgCD,OAKtCF,EAAQI,UAAY,CAClBH,MAAOG,IAAUC,OACjBF,UAAWC,IAAUC,Q,ICVjBC,E,4MACJC,oBAAsB,WAEpB,OADY,GACK,EAAKC,MAAMC,MAAMC,KAAO,EAAKF,MAAMC,MAAME,QAAU,EAAKH,MAAMC,MAAMG,M,EAGvFC,6BAA+B,WAC7B,OAAOC,KAAKC,MAAO,EAAKP,MAAMC,MAAMC,KAAO,EAAKH,sBAAyB,M,4CAG3E,WACE,IAAMS,EAAiBC,KAAKV,sBAC5B,EAA+BU,KAAKT,MAAMC,MAAlCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAErB,OAA0B,IAAnBI,EACC,cAAChB,EAAD,CAASC,MAAM,aAAaE,UAAU,aAAtC,SACA,sDAEA,eAACH,EAAD,CAASC,MAAM,aAAaE,UAAU,aAAtC,UACA,yCAAYO,EAAZ,OACA,4CAAeC,KACf,wCAAWC,KACX,0CAAaI,KACb,sDAAyBC,KAAKJ,+BAA9B,e,GAvBWK,aA4BVZ,IC7BTa,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBAAkBC,KAAK,SAASC,KAAMF,EAAKG,QAASL,EAApD,SACGE,GADUA,SASvBJ,EAAgBf,UAAY,CAC1BgB,QAAShB,IAAUuB,QAAQvB,IAAUC,QACrCgB,gBAAiBjB,IAAUwB,MAGdT,QCfMU,E,4MACnBpB,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,eAAiB,SAAAC,GACf,IAAQN,EAASM,EAAMC,cAAfP,KAER,EAAKQ,UAAS,SAAAC,GACZ,OAAO,aACLA,aACCT,EAAOS,EAAUT,GAAQ,O,4CAKhC,WACE,OACE,gCACE,cAACzB,EAAD,CAASC,MAAM,yBAAyBE,UAAU,aAClD,cAAC,EAAD,CAAiBiB,QAASe,OAAOC,KAAKnB,KAAKR,OAAQY,gBAAiBJ,KAAKa,iBACzE,cAAC,EAAD,CAAYrB,MAAOQ,KAAKR,e,GAvBCS,aCDjCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a94fbc8b.chunk.js","sourcesContent":["import PropsType from 'prop-types';\n\nexport function Section({ title, children, className }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      <section className={className}>{children}</section>\n    </div>\n  );\n}\n\nSection.PropsType = {\n  title: PropsType.string,\n  className: PropsType.string,\n};\n","import { Component } from 'react';\nimport { Section } from 'components/Section/Section';\n\nclass Statistics extends Component {\n  countTotalFeedbacks = () => {\n    let total = 0;\n    return (total += this.props.state.good + this.props.state.neutral + this.props.state.bad);\n  };\n\n  countPositiveFeedbackPercent = () => {\n    return Math.round((this.props.state.good / this.countTotalFeedbacks()) * 100);\n  };\n\n  render() {\n    const totalFeedbacks = this.countTotalFeedbacks();\n    const { good, neutral, bad } = this.props.state;\n\n      return totalFeedbacks === 0\n          ? ( <Section title=\"Statistics\" className=\"statistics\">\n              <div>No feedback given</div>\n          </Section> )\n          : ( <Section title=\"Statistics\" className=\"statistics\">\n              <div>Good: {good} </div>\n              <div>Neutral: {neutral}</div>\n              <div>Bad: {bad}</div>\n              <div>Total: {totalFeedbacks}</div>\n              <div>Positive feedback: {this.countPositiveFeedbackPercent()} %</div>\n          </Section> )\n    }\n}\n\nexport default Statistics;\n","import PropsType from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(key => {\n        return (\n          <button key={key} type=\"button\" name={key} onClick={onLeaveFeedback}>\n            {key}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nFeedbackOptions.PropsType = {\n  options: PropsType.arrayOf(PropsType.string),\n  onLeaveFeedback: PropsType.func,\n};\n\nexport default FeedbackOptions;\n","import './App.css';\nimport { Component } from 'react';\nimport { Section } from 'components/Section/Section';\nimport Statistics from 'components/Statistics/Statistics';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = event => {\n    const { name } = event.currentTarget;\n\n    this.setState(prevState => {\n      return {\n        prevState,\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please, leave feedback\" className=\"feedback\" />\n        <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.handleFeedback} />\n        <Statistics state={this.state} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}